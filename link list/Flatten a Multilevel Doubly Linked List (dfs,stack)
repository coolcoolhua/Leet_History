"""
# Definition for a Node.
class Node(object):
    def __init__(self, val, prev, next, child):
        self.val = val
        self.prev = prev
        self.next = next
        self.child = child
"""
class Solution(object):
    def flatten(self, head):
        """
        :type head: Node
        :rtype: Node
        """
        res=head
        stack=[]
        while head or stack:
            if not head.next and stack:
                temp=stack.pop()
                head.next=temp
                temp.prev=head
            if head.child:
                if head.next:
                    stack.append(head.next)
                head.next=head.child
                head.child.prev=head
                head.child=None
            head=head.next
        return res