# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def rotateRight(self, head, k):
        """
        :type head: ListNode
        :type k: int
        :rtype: ListNode
        """
        if not head or not head.next:
            return head
        length=1
        newHead=tail=head
        
        while tail.next:
            tail=tail.next
            length+=1
        print(length)
        tail.next=head
        count = 0
        breakpoint=length-k%length
        while count<breakpoint:
            tail=tail.next
            count+=1
        newHead=tail.next
        tail.next=None
        return newHead