# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def isPalindrome(self, head):
        """
        :type head: ListNode
        :rtype: bool
        """
        slow = fast =head
        while fast and fast.next:
            fast=fast.next.next
            slow=slow.next
        prev=None
        while slow:
            curr=slow
            slow=slow.next
            curr.next=prev
            prev=curr
        while prev:
            if prev.val != head.val:
                return False
            head=head.next
            prev=prev.next
        return True